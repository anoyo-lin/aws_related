AWSTemplateFormatVersion: 2010-09-09
Description: >-
        create lambda function for ssm_init and asg_tweak
        since we cant define ssm document name, so decide to Ref it
        i dont know the PassRole meaning implictly, so i just assume it can pass another role to the resource this action handled

Parameters:
  Environment:
    Type: String
    Description: for Environment specifed dev/stage/produs/prodeu
    Default: dev
  SsmPara:
    Type: String
    Description: ssm_parameter store the ami id
    Default: LatestAmi
  AsgTweakName:
    Type: String
    Description: the lambda function name execute in ssm
    Default: Automation-asg_tweak
  DocLogicName:
    Type: String
    Description: cfn can not create name for ssm documnet so use tag to execute the dedicate Document
    Default: ami-security-update
  SrcAmi:
    Description: 'source ami for ssm update'
    Type: 'String'
    Default: 'ami-redacted'
Resources:
  SsmInit:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - SsmAmiRole
      - SsmAmiPolicy
    Properties:
      Description: start security update ssm function
      FunctionName: Automation-init_ssm
      Handler: init_ssm.lambda_handler
      MemorySize: 192
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          PARAMETER: !Ref SsmPara
          DOCNAME: !Ref AmiDoc
      Role: !GetAtt 
        - SsmAmiRole
        - Arn
      Code:
        S3Bucket: !ImportValue SsmAmiS3Path
        S3Key: ssm_ami.zip
      Runtime: python3.6
      Timeout: 300
  SsmInitInvoke:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - PerMonth
    Properties:
      FunctionName: !Ref SsmInit
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt 
        - PerMonth
        - Arn
  AsgTweak:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - SsmAmiRole
      - SsmAmiPolicy
    Properties:
      Description: change the launch configuration for asg
      FunctionName: !Ref AsgTweakName
      Handler: asg_tweak.lambda_handler
      MemorySize: 192
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          PARAMETER: !Ref SsmPara
      Role: !GetAtt 
        - SsmAmiRole
        - Arn
      Code:
        S3Bucket: !ImportValue SsmAmiS3Path
        S3Key: ssm_ami.zip
      Runtime: python3.6
      Timeout: 300
  AsgTweakInvoke:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - PerMonth
    Properties:
      FunctionName: !Ref AsgTweak
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt 
        - PerMonth
        - Arn
  PerMonth:
    Type: 'AWS::Events::Rule'
    DependsOn:
      - SsmInit
      - AsgTweak
    Properties:
      Name: PerMonth
      Description: start 1:00am per monthe 1st daa 
      ScheduleExpression: 'cron(0 1 1 * ? *)'
      State: ENABLED
      Targets:
        - Arn: !GetAtt 
            - SsmInit
            - Arn
          Id: SsmInitUp
        - Arn: !GetAtt 
            - AsgTweak
            - Arn
          Id: AsgTweakUp
  SsmAmiPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn:
      - SsmAmiRole
    Properties:
      PolicyName: !Sub SsmAmiPolicy${Environment}
      Roles:
        - !Ref SsmAmiRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'ssm:DescribeParameters'
              - 'ssm:PutParameter'
              - 'ssm:GetParameter'
              - 'ssm:GetParameters'
              - 'ssm:StartAutomationExecution'
              - 'ssm:DescribeAutomationExecutions'
              - 'ssm:ListDocuments'
              - 'autoscaling:CreateLaunchConfiguration'
              - 'autoscaling:DescribeAutoScalingGroups'
              - 'autoscaling:UpdateAutoScalingGroup'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:DeleteObject'
              - 's3:ListBucketMultipartUploads'
              - 's3:AbortMultipartUpload'
              - 's3:CreateBucket'
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
              - 's3:ListMultipartUploadParts'
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !ImportValue SsmAmiS3Path
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !ImportValue SsmAmiS3Path
                  - /*
          - Effect: Allow
            Action:
              - 'iam:PassRole'
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*
  SsmAmiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub SsmAmiRole${Environment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  SsmAmiInstanceProfile:
    DependsOn:
      - SsmAmiRole
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: !Sub SsmAmiInstanceProfile${Environment}
      Path: /
      Roles:
        - !Ref SsmAmiRole
  SsmParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: 'store latest ami name when ssm perform security update'
      Name: !Ref SsmPara
      Type: 'String'
      Value: !Ref SrcAmi
  AmiDoc:
    Type: 'AWS::SSM::Document'
    Properties:
      Tags:
        - Key: 'LogicName'
          Value: !Ref DocLogicName
      DocumentType: 'Automation'
      Content:
        schemaVersion: '0.3'
        description: >-
          Updates AMI with Linux distribution packages and Amazon software. For
          details,see
          https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sysman-ami-walkthrough.html
        assumeRole: '{{AutomationAssumeRole}}'
        parameters:
          SourceAmiId:
            type: String
            description: (Required) The source Amazon Machine Image ID.
          InstanceIamRole:
            type: String
            description: >-
              (Required) The name of the role that enables Systems Manager (SSM)
              to manage the instance.
            default: ManagedInstanceProfile
          AutomationAssumeRole:
            type: String
            description: >-
              (Required) The ARN of the role that allows Automation to perform
              the actions on your behalf.
            default: 'arn:aws:iam::{{global:ACCOUNT_ID}}:role/AutomationServiceRole'
          SubnetId:
            type: String
            description: >-
              (Required) The subnet that the created instance will be placed
              into.
            default: subnet-215e174d
          TargetAmiName:
            type: String
            description: >-
              (Optional) The name of the new AMI that will be created. Default
              is a system-generated string including the source AMI id, and the
              creation time and date.
            default: 'base-app-test-{{global:DATE_TIME}}'
          InstanceType:
            type: String
            description: >-
              (Optional) Type of instance to launch as the workspace host.
              Instance types vary by region. Default is t2.micro.
            default: t2.small
          PreUpdateScript:
            type: String
            description: >-
              (Optional) URL of a script to run before updates are applied.
              Default ("none") is to not run a script.
            default: none
          PostUpdateScript:
            type: String
            description: >-
              (Optional) URL of a script to run after package updates are
              applied. Default ("none") is to not run a script.
            default: none
          IncludePackages:
            type: String
            description: >-
              (Optional) Only update these named packages. By default ("all"),
              all available updates are applied.
            default: all
          ExcludePackages:
            type: String
            description: >-
              (Optional) Names of packages to hold back from updates, under all
              conditions. By default ("none"), no package is excluded.
            default: none
        mainSteps:
          - name: launchInstance
            action: 'aws:runInstances'
            maxAttempts: 3
            timeoutSeconds: 1200
            onFailure: Abort
            inputs:
              ImageId: '{{SourceAmiId}}'
              InstanceType: '{{InstanceType}}'
              SubnetId: '{{ SubnetId }}'
              UserData: >-
                IyEvYmluL2Jhc2gNCg0KZnVuY3Rpb24gZ2V0X2NvbnRlbnRzKCkgew0KICAgIGlmIFsgLXggIiQod2hpY2ggY3VybCkiIF07IHRoZW4NCiAgICAgICAgY3VybCAtcyAtZiAiJDEiDQogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuDQogICAgICAgIHdnZXQgIiQxIiAtTyAtDQogICAgZWxzZQ0KICAgICAgICBkaWUgIk5vIGRvd25sb2FkIHV0aWxpdHkgKGN1cmwsIHdnZXQpIg0KICAgIGZpDQp9DQoNCnJlYWRvbmx5IElERU5USVRZX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC8yMDE2LTA2LTMwL2R5bmFtaWMvaW5zdGFuY2UtaWRlbnRpdHkvZG9jdW1lbnQvIg0KcmVhZG9ubHkgVFJVRV9SRUdJT049JChnZXRfY29udGVudHMgIiRJREVOVElUWV9VUkwiIHwgYXdrIC1GXCIgJy9yZWdpb24vIHsgcHJpbnQgJDQgfScpDQpyZWFkb25seSBERUZBVUxUX1JFR0lPTj0idXMtZWFzdC0xIg0KcmVhZG9ubHkgUkVHSU9OPSIke1RSVUVfUkVHSU9OOi0kREVGQVVMVF9SRUdJT059Ig0KDQpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50Ig0KIFNDUklQVF9VUkw9Imh0dHBzOi8vYXdzLXNzbS1kb3dubG9hZHMtJFJFR0lPTi5zMy5hbWF6b25hd3MuY29tL3NjcmlwdHMvJFNDUklQVF9OQU1FIg0KDQppZiBbICIkUkVHSU9OIiA9ICJjbi1ub3J0aC0xIiBdOyB0aGVuDQogIFNDUklQVF9VUkw9Imh0dHBzOi8vYXdzLXNzbS1kb3dubG9hZHMtJFJFR0lPTi5zMy5jbi1ub3J0aC0xLmFtYXpvbmF3cy5jb20uY24vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQpmaQ0KDQppZiBbICIkUkVHSU9OIiA9ICJ1cy1nb3Ytd2VzdC0xIiBdOyB0aGVuDQogIFNDUklQVF9VUkw9Imh0dHBzOi8vYXdzLXNzbS1kb3dubG9hZHMtJFJFR0lPTi5zMy11cy1nb3Ytd2VzdC0xLmFtYXpvbmF3cy5jb20vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQpmaQ0KDQpjZCAvdG1wDQpGSUxFX1NJWkU9MA0KTUFYX1JFVFJZX0NPVU5UPTMNClJFVFJZX0NPVU5UPTANCg0Kd2hpbGUgWyAkUkVUUllfQ09VTlQgLWx0ICRNQVhfUkVUUllfQ09VTlQgXSA7IGRvDQogIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBEb3dubG9hZGluZyBzY3JpcHQgZnJvbSAkU0NSSVBUX1VSTA0KICBnZXRfY29udGVudHMgIiRTQ1JJUFRfVVJMIiA+ICIkU0NSSVBUX05BTUUiDQogIEZJTEVfU0laRT0kKGR1IC1rIC90bXAvJFNDUklQVF9OQU1FIHwgY3V0IC1mMSkNCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IEZpbmlzaGVkIGRvd25sb2FkaW5nIHNjcmlwdCwgc2l6ZTogJEZJTEVfU0laRQ0KICBpZiBbICRGSUxFX1NJWkUgLWd0IDAgXTsgdGhlbg0KICAgIGJyZWFrDQogIGVsc2UNCiAgICBpZiBbWyAkUkVUUllfQ09VTlQgLWx0IE1BWF9SRVRSWV9DT1VOVCBdXTsgdGhlbg0KICAgICAgUkVUUllfQ09VTlQ9JCgoUkVUUllfQ09VTlQrMSkpOw0KICAgICAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IEZpbGVTaXplIGlzIDAsIHJldHJ5Q291bnQ6ICRSRVRSWV9DT1VOVA0KICAgIGZpDQogIGZpIA0KZG9uZQ0KDQppZiBbICRGSUxFX1NJWkUgLWd0IDAgXTsgdGhlbg0KICBjaG1vZCAreCAiJFNDUklQVF9OQU1FIg0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogUnVubmluZyBVcGRhdGVTU01BZ2VudCBzY3JpcHQgbm93IC4uLi4NCiAgLi8iJFNDUklQVF9OQU1FIiAtLXJlZ2lvbiAiJFJFR0lPTiINCmVsc2UNCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IFVuYWJsZSB0byBkb3dubG9hZCBzY3JpcHQsIHF1aXR0aW5nIC4uLi4NCmZp
              MinInstanceCount: 1
              MaxInstanceCount: 1
              IamInstanceProfileName: '{{InstanceIamRole}}'
          - name: updateOSSoftware
            action: 'aws:runCommand'
            maxAttempts: 3
            timeoutSeconds: 3600
            onFailure: Abort
            inputs:
              DocumentName: AWS-RunShellScript
              InstanceIds:
                - '{{launchInstance.InstanceIds}}'
              Parameters:
                commands:
                  - set -e
                  - '[ -x "$(which wget)" ] && get_contents=''wget $1 -O -'''
                  - '[ -x "$(which curl)" ] && get_contents=''curl -s -f $1'''
                  - >-
                    eval $get_contents
                    https://aws-ssm-downloads-{{global:REGION}}.s3.amazonaws.com/scripts/aws-update-linux-instance
                    > /tmp/aws-update-linux-instance
                  - chmod +x /tmp/aws-update-linux-instance
                  - >-
                    /tmp/aws-update-linux-instance --pre-update-script
                    '{{PreUpdateScript}}' --post-update-script
                    '{{PostUpdateScript}}' --include-packages
                    '{{IncludePackages}}' --exclude-packages
                    '{{ExcludePackages}}' 2>&1 | tee
                    /tmp/aws-update-linux-instance.log
          - name: stopInstance
            action: 'aws:changeInstanceState'
            maxAttempts: 3
            timeoutSeconds: 1200
            onFailure: Abort
            inputs:
              InstanceIds:
                - '{{launchInstance.InstanceIds}}'
              DesiredState: stopped
          - name: createImage
            action: 'aws:createImage'
            maxAttempts: 3
            onFailure: Abort
            inputs:
              InstanceId: '{{launchInstance.InstanceIds}}'
              ImageName: '{{TargetAmiName}}'
              NoReboot: true
              ImageDescription: 'UpdateLinuxAmi_from_{{SourceAmiId}}_on_{{global:DATE_TIME}}'
          - name: createTags
            action: 'aws:createTags'
            maxAttempts: 1
            onFailure: Continue
            inputs:
              ResourceType: EC2
              ResourceIds:
                - '{{createImage.ImageId}}'
              Tags:
                - Key: SSM_EXEC_ID
                  Value: '{{automation:EXECUTION_ID}}'
                - Key: Source
                  Value: '{{SourceAmiId}}'
          - name: terminateInstance
            action: 'aws:changeInstanceState'
            maxAttempts: 3
            onFailure: Continue
            inputs:
              InstanceIds:
                - '{{launchInstance.InstanceIds}}'
              DesiredState: terminated
          - name: updateSsmParam
            action: 'aws:invokeLambdaFunction'
            timeoutSeconds: 1200
            maxAttempts: 1
            onFailure: Abort
            inputs:
              FunctionName: !Ref AsgTweakName
              Payload: !Sub >-
                {"parameterName":"${SsmPara}",
                "parameterValue":"{{createImage.ImageId}}"}
        outputs:
          - createImage.ImageId
